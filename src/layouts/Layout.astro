---
import "@fontsource-variable/inter";
import "@fontsource-variable/jetbrains-mono";
import { getImage } from "astro:assets";
import noisy from "../assets/Grain.png";
import noisySvg from "../assets/noise.svg";
import { ClientTime } from "../components/ClientTime";

interface Props {
  title: string;
  description?: string;
}

const { title, description = "Josh's personal site" } = Astro.props;

const optimizedBackground = await getImage({ src: noisy, format: "webp" });
const noiseBackgroundUrl = `url(${optimizedBackground.src})`;
const noiseBackgroundSvg = `url(${noisySvg.src})`;
const darkColor = "#181615";
const lightColor = "#ebebec";
---

<!doctype html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <meta
      name="apple-mobile-web-app-status-bar-style"
      id="apple-status-bar"
      content="default"
    />
    <meta name="theme-color" id="theme-color" content={darkColor} />
    <!-- <link rel="icon" type="image/svg+xml" href="/favicon.svg" /> -->
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body
    class="min-w-[100dvw] min-h-[100dvh] bg-stone-50 dark:bg-stone-950 dark:text-zinc-50"
  >
    <slot />
    <footer class="mt-56 px-4">
      <div class="w-full h-[1px] bg-zinc-600 dark:bg-zinc-500 slight-x-mask">
      </div>
      <section class="mx-auto max-w-2xl py-10 font-mono text-pretty">
        <a href="/" class="font-mono">Joshua Constantine Santos</a>
        <p class="text-sm text-zinc-500 dark:text-zinc-400">
          connect with me <a
            href="https://www.twitter.com/mrnicericee"
            target="_blank"
            class="underline">@Twitter</a
          >,look through some of my code on <a
            href="https://github.com/mrnicericee"
            target="_blank"
            class="underline">GitHub</a
          >
        </p>
        <div class="pt-10">
          <ClientTime client:only="react" />
          <p>
            Current server time <span class="tabular-nums"
              >{
                Intl.DateTimeFormat(undefined, {
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                  hour: "numeric",
                  minute: "numeric",
                  second: "numeric",
                }).format(new Date())
              }</span
            >
          </p>
          <!-- grainy overlay -->
          <div class="grainy-light dark:grainy-dark z-50"></div>
        </div>
        <style
          is:global
          define:vars={{
            noiseUrl: noiseBackgroundUrl,
            noiseSvg: noiseBackgroundSvg,
          }}
        >
          :root {
            --mask-left-start: 25%;
            --mask-left-end: 75%;
          }

          @keyframes static {
            from {
              transform: translateX(-1000px);
            }

            33% {
              transform: translateY(-1000px);
            }

            66% {
              transform: translateX(1000px);
            }

            to {
              transform: translateY(1000px);
            }
          }

          body {
            font-family: "Inter Variable", sans-serif;
          }
          code {
            font-family:
              Menlo,
              Monaco,
              Lucida Console,
              Liberation Mono,
              DejaVu Sans Mono,
              Bitstream Vera Sans Mono,
              Courier New,
              monospace;
          }
        </style>
      </section>
    </footer>
    <script is:inline define:vars={{ darkColor, lightColor }}>
      const theme = () => {
        const prefersDark = window.matchMedia(
          "(prefers-color-scheme: dark)"
        ).matches;

        const metaThemeColor = document.querySelector(
          'meta[name="theme-color"]'
        );
        const metaAppleStatusBar = document.querySelector(
          'meta[name="apple-mobile-web-app-status-bar-style"]'
        );

        if (prefersDark) {
          document.documentElement.classList.add("dark");
          metaThemeColor.setAttribute("content", darkColor);
          metaAppleStatusBar.setAttribute("content", "black-translucent");
        } else {
          document.documentElement.classList.remove("dark");
          metaThemeColor.setAttribute("content", lightColor);
          metaAppleStatusBar.setAttribute("content", "default");
        }
      };

      theme();

      window
        .matchMedia("(prefers-color-scheme: dark)")
        .addEventListener("change", theme);
    </script>
  </body>
</html>
